import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private String genre;
    private boolean available;

    public Book(String title, String author, String genre) {
        this.title = title;
        this.author = author;
        this.genre = genre;
        this.available = true; // Assume the book is initially available
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getGenre() {
        return genre;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }
}

class BookManager {
    private List<Book> books;

    public BookManager() {
        this.books = new ArrayList<>();
    }

    public void addBook(Book book) {
        books.add(book);
    }

    public void displayBooks() {
        System.out.println("Books in the library:");
        for (Book book : books) {
            System.out.println("Title: " + book.getTitle());
            System.out.println("Author: " + book.getAuthor());
            System.out.println("Genre: " + book.getGenre());
            System.out.println("Availability: " + (book.isAvailable() ? "Available" : "Not Available"));
            System.out.println();
        }
    }

    public void checkOutBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title) && book.isAvailable()) {
                book.setAvailable(false);
                System.out.println("Book \"" + title + "\" checked out successfully.");
                return;
            }
        }
        System.out.println("Book \"" + title + "\" not available for checkout.");
    }

    public void returnBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title) && !book.isAvailable()) {
                book.setAvailable(true);
                System.out.println("Book \"" + title + "\" returned successfully.");
                return;
            }
        }
        System.out.println("Book \"" + title + "\" cannot be returned as it is not checked out.");
    }
}

public class LibraryManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        BookManager bookManager = new BookManager();

        // Adding sample books to the library
        bookManager.addBook(new Book("The Great Gatsby", "F. Scott Fitzgerald", "Fiction"));
        bookManager.addBook(new Book("To Kill a Mockingbird", "Harper Lee", "Fiction"));
        bookManager.addBook(new Book("1984", "George Orwell", "Dystopian"));

        int choice;
        do {
            System.out.println("Library Management System Menu:");
            System.out.println("1. Display Books");
            System.out.println("2. Check Out a Book");
            System.out.println("3. Return a Book");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    bookManager.displayBooks();
                    break;
                case 2:
                    System.out.print("Enter the title of the book to check out: ");
                    scanner.nextLine(); // Consume the newline character
                    String checkOutTitle = scanner.nextLine();
                    bookManager.checkOutBook(checkOutTitle);
                    break;
                case 3:
                    System.out.print("Enter the title of the book to return: ");
                    scanner.nextLine(); // Consume the newline character
                    String returnTitle = scanner.nextLine();
                    bookManager.returnBook(returnTitle);
                    break;
                case 0:
                    System.out.println("Exiting the Library Management System. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
                    break;
            }

        } while (choice != 0);

        scanner.close();
    }
}
